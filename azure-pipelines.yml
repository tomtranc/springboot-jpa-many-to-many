# Maven
# Build your Java project and run tests with Apache Maven.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
- main

variables:
  # Agent VM info
  vmImageName: 'ubuntu-latest'
  currentDate: $[ format('{0:yyyy}.{0:MM}.{0:dd}', pipeline.startTime) ]

  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: 'ttranPipeline-sc'
  imageRepository: 'ttran-a9bufhazdagrd7hy.azurecr.io/springboot-jpa-many-to-many'
  dockerfilePath: '$(Build.SourcesDirectory)/Dockerfile'
  imageTag: '$(currentDate)-$(Build.SourceBranchName)+$(Build.SourceVersion)'

stages:
  - stage: Build
    displayName: Build and push stage
    jobs:
      - job: Build
        displayName: Build
        pool:
          vmImage: $(vmImageName)
        steps:
          - task: Maven@3
            inputs:
              mavenPomFile: 'pom.xml'
              mavenOptions: '-Xmx3072m'
              javaHomeOption: 'JDKVersion'
              jdkVersionOption: '1.21'
              jdkArchitectureOption: 'x64'
              publishJUnitResults: true
              testResultsFiles: '**/surefire-reports/TEST-*.xml'
              goals: 'package'

          - task: Docker@2
            displayName: Build and push an image to container registry
            inputs:
              command: 'buildAndPush' # 'buildAndPush' | 'build' | 'push' | 'login' | 'logout' | 'start' | 'stop'. Required. Command. Default: buildAndPush.
              containerRegistry: $(dockerRegistryServiceConnection)
              repository: $(imageRepository)
              Dockerfile: $(dockerfilePath) # string. Required when command = build || command = buildAndPush. Dockerfile. Default: **/Dockerfile.
              tags: |
                $(imageTag)

          - script: |
              ls -ltr

          - task: PublishBuildArtifacts@1
            displayName: 'Publish Artifact'
            condition: succeeded() # The condition argument specifies to run the task only when the previous task succeeds.
            inputs:
              pathToPublish: '$(System.DefaultWorkingDirectory)/target/*.war'
              artifactName: 'ttranapp'